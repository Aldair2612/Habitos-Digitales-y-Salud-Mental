datos <- read_csv("digital_habits_vs_mental_health.csv")
library(tidyverse) # Manipulación y visualización de datos
library(readr)     # Lectura de archivos CSV
library(ggplot2)   # Gráficos
datos <- read_csv("digital_habits_vs_mental_health.csv")
View(datos)
names(datos) <- c("tiempo_pantalla", "numero_redes",
"horas_tiktok", "promedio_sueño",
"nivel_estres","estado_animo")
ggplot(datos, aes(x = tiempo_pantalla, y = estado_animo)) +
geom_point(color = "steelblue", size = 2, alpha = 0.7) +  # Puntos
geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dashed") +  # Línea de tendencia
labs(
title = "Relación entre tiempo de pantalla y estado de ánimo",
x = "Horas de pantalla",
y = "Estado de ánimo"
) +
theme_minimal()  # Estilo limpio
windows()  # Abre una ventana nueva para el gráfico
plot <- ggplot(datos, aes(x = tiempo_pantalla, y = estado_animo)) +
geom_point(color = "steelblue", size = 2, alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dashed") +
labs(
title = "Relación entre tiempo de pantalla y estado de ánimo",
x = "Horas de pantalla",
y = "Estado de ánimo"
) +
theme_minimal()
print(plot)
windows()  # Abre una ventana nueva para el gráfico
plot <- ggplot(datos, aes(x = tiempo_pantalla, y = estado_animo)) +
geom_jitter(color = "steelblue", size = 2, alpha = 0.4, width = 0.2, height = 0.2) +
geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dashed") +
labs(
title = "Relación entre tiempo de pantalla y estado de ánimo",
x = "Horas de pantalla",
y = "Estado de ánimo"
) +
theme_minimal()
print(plot)
ggplot(datos, aes(x = tiempo_pantalla, y = estado_animo)) +
geom_smooth(method = "lm", se = FALSE, color = "red", size = 1.5) +
labs(
title = "Relación entre tiempo de pantalla y estado de ánimo",
x = "Horas de pantalla",
y = "Estado de ánimo"
) +
theme_minimal()
correlacion <- cor(datos)
print(round(correlacion, 2))
datos %>%
pivot_longer(cols = everything()) %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 30, fill = "skyblue", color = "white") +
facet_wrap(~name, scales = "free") +
theme_minimal() +
labs(title = "Distribución de variables del estudio")
# Convertir a formato largo
datos_largos <- datos %>%
select(estado_animo, tiempo_pantalla, redes_sociales_usadas, horas_TikTok, horas_sueno, nivel_estres) %>%
pivot_longer(cols = -estado_animo, names_to = "variable", values_to = "valor")
# Convertir a formato largo
datos_largos <- datos %>%
select(estado_animo, tiempo_pantalla, redes_sociales_usadas, horas_TikTok, horas_sueno, nivel_estres) %>%
pivot_longer(cols = -estado_animo, names_to = "variable", values_to = "valor")
datos_largos <- datos %>%
select(estado_animo, tiempo_pantalla, horas_TikTok, promedio_sueño, nivel_estres) %>%
pivot_longer(cols = -estado_animo, names_to = "variable", values_to = "valor")
datos_largos <- datos %>%
select(estado_animo, tiempo_pantalla, horas_tiktok, promedio_sueño, nivel_estres) %>%
pivot_longer(cols = -estado_animo, names_to = "variable", values_to = "valor")
ggplot(datos_largos, aes(x = valor, y = estado_animo)) +
geom_point(alpha = 0.6, color = "steelblue") +
geom_smooth(method = "lm", se = FALSE, color = "red", size = 1.2) +
facet_wrap(~variable, scales = "free_x") +
labs(title = "Relación entre variables y estado de ánimo",
x = "Valor de la variable",
y = "Estado de ánimo") +
theme_minimal()
predictoras <- c("estado_animo", "tiempo_pantalla", "horas_tiktok", "promedio_sueño", "nivel_estres")
# Crear gráficos automáticamente (solo línea de regresión)
graficos <- map(predictoras, function(var) {
ggplot(datos, aes_string(x = var, y = "estado_animo")) +
geom_smooth(method = "lm", se = FALSE, color = "red", size = 1.2) +
labs(
title = paste("Línea de regresión: Estado de ánimo vs", var),
x = var,
y = "Estado de ánimo"
) +
theme_minimal()
})
# Mostrar uno de los gráficos
graficos[[1]]
# Crear gráficos automáticamente (solo línea de regresión)
graficos <- map(predictoras, function(var) {
ggplot(datos, aes_string(x = var, y = "estado_animo")) +
geom_smooth(method = "lm", se = FALSE, color = "red", size = 1.2) +
labs(
title = paste("Línea de regresión: Estado de ánimo vs", var),
x = var,
y = "Estado de ánimo"
) +
theme_minimal()
})
# Mostrar uno de los gráficos
graficos[[1]]
graficos[[1]]
graficos[[1]]
ggplot(datos_largos, aes(x = valor, y = estado_animo)) +
geom_smooth(method = "lm", se = FALSE, color = "red", size = 1.3) +
facet_wrap(~variable, scales = "free_x") +
labs(title = "Líneas de regresión entre variables y estado de ánimo",
x = "Variable explicativa",
y = "Estado de ánimo") +
theme_minimal()
datos_largos <- datos %>%
select(estado_animo, tiempo_pantalla, horas_tiktok, promedio_sueño, nivel_estres) %>%
pivot_longer(cols = -estado_animo, names_to = "variable", values_to = "valor")
print(datos_largos)
View(datos_largos)
ggplot(datos, aes(x = tiempo_pantalla, y = estado_animo)) +
geom_smooth(method = "lm", se = FALSE, color = "red")
ggplot(datos, aes(x = tiempo_pantalla, y = estado_animo)) +
geom_smooth(method = "lm", se = TRUE, color = "red")
ggplot(datos, aes(x = tiempo_pantalla, y = estado_animo)) +
geom_smooth(method = "lm", se = TRUE, color = "red")
ggplot(datos_largos, aes(x = valor, y = estado_animo)) +
geom_smooth(method = "lm", se = FALSE, color = "red", size = 1.3) +
facet_wrap(~variable, scales = "free_x") +
labs(title = "Líneas de regresión entre variables y estado de ánimo",
x = "Variable explicativa",
y = "Estado de ánimo") +
theme_minimal()
datos %>%
pivot_longer(cols = everything()) %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 30, fill = "skyblue", color = "white") +
facet_wrap(~name, scales = "free") +
theme_minimal() +
labs(title = "Distribución de variables del estudio")
a <- datos %>%
pivot_longer(cols = everything())
View(a)
histograma <- datos %>%
pivot_longer(cols = everything())
ggplot(histograma, aes(x = value)) +
geom_histogram(bins = 30, fill = "skyblue", color = "white") +
facet_wrap(~name, scales = "free") +
theme_minimal() +
labs(title = "Distribución de variables del estudio",
x = "Valor",
y = "Frecuencia")
dispersion <- datos %>%
select(estado_animo, tiempo_pantalla, horas_tiktok, promedio_sueño, nivel_estres) %>%
pivot_longer(cols = -estado_animo, names_to = "variable", values_to = "valor")
ggplot(dispersion, aes(x = valor, y = estado_animo)) +
geom_smooth(method = "lm", se = FALSE, color = "red", size = 1.3) +
facet_wrap(~variable, scales = "free_x") +
labs(title = "Líneas de regresión entre variables y estado de ánimo",
x = "Variables explicativas",
y = "Estado de ánimo") +
theme_minimal()
ggplot(histograma, aes(x = value)) +
geom_histogram(bins = 30, fill = "skyblue", color = "white") +
facet_wrap(~name, scales = "free") +
theme_minimal() +
labs(title = "Distribución de variables del estudio",
x = "Valor",
y = "Frecuencia")
library(tidyverse) # Manipulación y visualización de datos
library(readr)     # Lectura de archivos CSV
library(ggplot2)   # Gráficos
datos <- read_csv("digital_habits_vs_mental_health.csv")
View(datos)
# Cambiar el nombre las columnas
names(datos) <- c("tiempo_pantalla", "numero_redes",
"horas_tiktok", "promedio_sueño",
"nivel_estres","estado_animo")
library(tidyverse) # Manipulación y visualización de datos
library(readr)     # Lectura de archivos CSV
library(ggplot2)
datos <- read_csv("digital_habits_vs_mental_health.csv")
# Cambiar el nombre las columnas
names(datos) <- c("tiempo_pantalla", "numero_redes",
"horas_tiktok", "promedio_sueño",
"nivel_estres","estado_animo")
View(datos)
modelo_lineal <- lm(estado_animo ~ tiempo_pantalla + numero_redes +
horas_tiktok + promedio_sueño + nivel_estres,
data = datos)
summary(modelo_lineal)
resultados <- datos %>%
mutate(
estado_animo_real = estado_animo,
estado_animo_predicho = predict(modelo_lineal),
observacion = row_number()
)
ggplot(resultados, aes(x = observacion)) +
geom_line(aes(y = estado_animo_real, color = "Real"), size = 1) +
geom_line(aes(y = estado_animo_predicho, color = "Predicho"), size = 1, linetype = "dashed") +
scale_color_manual(values = c("Real" = "steelblue", "Predicho" = "red")) +
labs(title = "Comparación de estado de ánimo real vs. predicho",
x = "Observación",
y = "Estado de ánimo",
color = "Línea") +
theme_minimal()
ggplot(datos, aes(x = nivel_estres, y = estado_animo)) +
geom_smooth(method = "loess", se = FALSE, color = "blue", size = 1.2) +
labs(title = "Relación entre nivel de estrés y estado de ánimo",
x = "Nivel de estrés", y = "Estado de ánimo") +
theme_minimal()
modelo_cuad <- lm(estado_animo ~ tiempo_pantalla + numero_redes +
horas_tiktok + promedio_sueño + nivel_estres +
I(nivel_estres^2), data = datos)
summary(modelo_cuad)
